scalar Upload
scalar DateMillisecond
scalar DateShort
scalar Time
scalar ISO8601
extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.0"
    import: ["@key", "@shareable"]
  )

type Query {
  brands(first: Int, after: Int, details: BrandsInput!): BrandsConnection!
  beforeLaunchBrands(
    first: Int
    after: Int
    details: BeforeLaunchBrandsInput!
  ): BeforeLaunchBrandsConnection!
  mamadChinaAirTransferDetails(id: ID!): MamadChinaAirTransferDetails!
  mamadWarehouseReceivingSchedule(
    id: ID!
  ): MamadWarehouseReceivingScheduleDetails!
  mamadPurchases(
    first: Int!
    after: Int!
    details: MamadPurchasesInput!
  ): MamadPurchasesConnection!
  mamadFbaFeeConflicts: MamadFbaFeeConflictsConnection!
  mamadCogs(
    first: Int
    after: Int
    details: MamadCogsInput!
  ): MamadCogsConnection!
  mamadRatingChanges(
    first: Int!
    after: Int!
    details: MamadRatingChangesInput!
  ): MamadRatingChangeConnection!
}

type Mutation {
  createBrand(details: CreateBrandInput!): Brand!
  editBrand(details: EditBrandInput!): Brand!
  deleteBrand(id: String!): Boolean!
  generateSku(details: GenerateSkuInput!): String!
  addBeforeLaunchBrand(details: AddBeforeLaunchBrandInput!): Boolean!
  editBeforeLaunchBrand(
    details: EditBeforeLaunchBrandInput!
  ): BeforeLaunchBrand!
  addMamadWarehouseReceivingSchedule(
    details: AddMamadWarehouseReceivingScheduleInput!
  ): Boolean!
}

input CreateBrandInput {
  name: String!
  abbreviation: String!
}

input BrandInput {
  id: String!
  name: String!
  abbreviation: String!
}

input GenerateSkuInput {
  productName: String!
  numberOfUnits: Int!
  brand: BrandInput!
}

input EditBrandInput {
  id: String!
  name: String!
  abbreviation: String!
}

input BrandsSortInput {
  columnName: BrandsSortableColumns!
  sortBy: SortBy!
}

input BrandsInput {
  searchTerm: String!
  sort: BrandsSortInput!
}

input BeforeLaunchBrandsFilterInput {
  columnName: BeforeLaunchBrandsFilterableColumns!
  biggerThan: Float
  lessThan: Float
}
input BeforeLaunchBrandsSortInput {
  columnName: BeforeLaunchBrandsSortableColumns!
  sortBy: SortBy!
}

input BeforeLaunchBrandsInput {
  searchTerm: String!
  sort: BeforeLaunchBrandsSortInput!
  filters: [BeforeLaunchBrandsFilterInput]!
}

input AddBeforeLaunchBrandInput {
  skuId: ID!
  titleAndBackend: String
  titleAndBackendNote: String
  picsAndDescriptive: String
  picsAndDescriptiveNote: String
}

input EditBeforeLaunchBrandInput {
  titleAndBackend: String
  titleAndBackendNote: String
  picsAndDescriptive: String
  picsAndDescriptiveNote: String
}

input AddMamadWarehouseReceivingScheduleInput {
  companyId: ID!
  deliveryDate: String
  deliveryTime: String
  shipmentInvoiceNumber: String
  containerNumber: String
  timeIn: String
  timeOut: String
  notes: String
  etd: String
  eta: String
  men: Int
  timeScheduleHour: Int
  timeScheduleMinute: Int
  skus: [MamadWarehouseReceivingItemInput]!
}

input MamadWarehouseReceivingItemInput {
  skuId: ID!
  numberOfUnits: Int!
  numberOfBoxes: Int!
  skuInvoiceNumber: String
  pallets: [MamadWarehouseReceivingItemPalletInput]!
}

input MamadWarehouseReceivingItemPalletInput {
  placement: String!
}

# mamad purchases inputs

input MamadPurchasesInput {
  searchTerm: String!
  sort: MamadPrchasesSortInput!
  filters: [MamadPurchasesFilterInput]!
}

input MamadPrchasesSortInput {
  columnName: MamadPurchasesSortableColumns!
  sortBy: SortBy!
}

input MamadPurchasesFilterInput {
  columnName: MamadPurchasesFilterableColumns!
  biggerThan: Float
  lessThan: Float
}

input MamadCogsInput {
  searchTerm: String!
  startDate: DateShort!
  endDate: DateShort!
  sort: MamadCogsSortInput!
  filters: [MamadCogsFilterInput]!
}

input MamadCogsSortInput {
  columnName: MamadCogsSortableColumns!
  cogsIndex: Int
  sortBy: SortBy!
}

input MamadCogsFilterInput {
  columnName: MamadCogsFilterableColumns!
  cogsIndex: Int!
  biggerThan: Float
  lessThan: Float
}

input MamadRatingChangesInput {
  searchTerm: String!
  sort: MamadRatingSortInput!
  filters: [MamadRatingFilterInput]!
}

input MamadRatingSortInput {
  columnName: MamadRatingSortableColumns!
  sortBy: SortBy!
}

input MamadRatingFilterInput {
  columnName: MamadRatingFilterableColumns!
  biggerThan: Float
  lessThan: Float
}
# ################## ################## ################## ################## #################

type BeforeLaunchBrandsConnection {
  edges: [BrandsBeforeLaunchEdge]!
  pageInfo: NumericCursorPageInfo!
}

type BrandsBeforeLaunchEdge {
  cursor: String!
  node: BeforeLaunchBrand!
}

type BeforeLaunchBrand {
  id: String!
  sku: String!
  asin: String!
  price: Float!
  titleAndBackend: String!
  titleAndBackendNote: String!
  picsAndDescriptive: String!
  picsAndDescriptiveNote: String!
}

type NumericCursorPageInfo @shareable {
  hasNextPage: Boolean!
  endCursor: Int!
}

type BrandsConnection {
  edges: [BrandsEdge]!
  pageInfo: NumericCursorPageInfo!
}

type BrandsEdge {
  cursor: String!
  node: Brand!
}

type Brand {
  id: String!
  name: String!
  abbreviation: String!
}

type MamadChinaAirTransferDetails {
  id: ID!
  airNumber: String!
  airFreightCost: Float!
  otherCost: Float!
  etd: DateShort!
  status: String!
  skus: [MamadChinaAirTransferSku]!
}

type MamadChinaAirTransferSku {
  id: ID!
  sku: String!
  skuId: ID!
  unitsPerBox: Int!
  unitPrice: Float!
  purchases: [MamadChinaAirTransferSkuPurchase]!
}

type MamadChinaAirTransferSkuPurchase {
  id: ID!
  puchaseId: ID!
  units: Int!
  note: String!
}

type MamadWarehouseReceivingScheduleDetails {
  id: ID!
  companyName: String!
  deliveryDate: String
  status: String!
  preReceived: Boolean!
  received: Boolean!
  etd: String
  notes: String
  skus: [MamadWarehouseReceivingItem]!
}

type MamadWarehouseReceivingItem {
  id: ID!
  sku: String!
  skuId: ID!
  numberOfBoxes: Int!
  numberOfUnits: Int!
  skuInvoiceNumber: String
  locations: [MamadWarehouseReceivingItemLocation]!
}

type MamadWarehouseReceivingItemLocation {
  id: ID!
  placement: String!
  numberOfBoxes: Int!
}

# mamad  purchases type

type ImageType @shareable {
  smallImage: String!
  bigImage: String!
}

type MamadPurchasesConnection {
  edges: [MamadPurchaseEdge]!
  pageInfo: NumericCursorPageInfo!
}

type MamadPurchaseEdge {
  cursor: String!
  node: MamadPurchaseNode!
}

type MamadPurchaseNode {
  id: ID!
  sku: String!
  image: ImageType!
  date: DateShort!
  status: purchasesStatus!
  amount: Int!
  etd: DateShort
  unitPrice: Float
  totalPrice: Float
  invoiceNumber: String
  vendorName: String!
  vendorEmails: [String]!
  notes: String
}

type MamadFbaFeeConflictsConnection {
  edges: [MamadFbaFeeConflictEdge]!
  pageInfo: NumericCursorPageInfo!
}

type MamadFbaFeeConflictEdge {
  cursor: String!
  node: MamadFbaFeeConflictNode!
}

type MamadFbaFeeConflictNode {
  id: ID!
  sku: String!
  image: ImageType!
  caseDate: DateShort
  fbaFee: Float!
  realFbaFee: Float!
  fbaTier: String!
  realFbaTier: String!
  change1: MamadFbaFeeChange!
  change2: MamadFbaFeeChange!
  change3: MamadFbaFeeChange!
  change4: MamadFbaFeeChange!
  change5: MamadFbaFeeChange!
  change6: MamadFbaFeeChange!
  change7: MamadFbaFeeChange!
  change8: MamadFbaFeeChange!
  change9: MamadFbaFeeChange!
  change10: MamadFbaFeeChange!
}

type MamadFbaFeeChange {
  oldFbaFee: Float
  newFbaFee: Float
  date: DateShort
}

type MamadCogsConnection {
  edges: [MamadCogsEdge]!
  pageInfo: NumericCursorPageInfo!
}

type MamadCogsEdge {
  cursor: String!
  node: MamadCogsNode!
}

type MamadCogsNode {
  id: ID!
  sku: String!
  cogsHistory: [EachCogHistory]!
}

type EachCogHistory {
  items: Int!
  cogs: Float!
  date: DateShort!
}

type MamadRatingChangeConnection {
  edges: [MamadRatingChangeEdge]!
  pageInfo: NumericCursorPageInfo!
}

type MamadRatingChangeEdge {
  cursor: String!
  node: MamadRatingChangeNode!
}

type MamadRatingChangeNode {
  id: ID!
  sku: String!
  image: ImageType!
  rate: Float!
  globalRating: Int!
  giveAway1: MamadRatingGiveAway
  giveAway2: MamadRatingGiveAway
  giveAway3: MamadRatingGiveAway
  giveAway4: MamadRatingGiveAway
  giveAway5: MamadRatingGiveAway
  giveAway6: MamadRatingGiveAway
  giveAway7: MamadRatingGiveAway
  giveAway8: MamadRatingGiveAway
  giveAway9: MamadRatingGiveAway
  giveAway10: MamadRatingGiveAway
}

type MamadRatingGiveAway {
  oldRating: Float!
  newRating: Float!
  date: DateShort!
}

enum purchasesStatus {
  DRAFTED
  CANCELLED
  APPROVED
}

enum MamadPurchasesSortableColumns {
  SKU
  NOTES
  AMOUNT
  UNIT_PRICE
  TOTAL_PRICE
  DATE
  STATUS
  ETD
  INVOICE_NUMBER
  VENDOR_NAME
  VENDOR_EMAIL
}

enum MamadPurchasesFilterableColumns {
  AMOUNT
  UNIT_PRICE
  TOTAL_PRICE
}

enum BrandsSortableColumns {
  NAME
  ABBREVIATION
}

enum BeforeLaunchBrandsSortableColumns {
  SKU
  ASIN
  TITLE_AND_BACKEND
  TITLE_AND_BACKEND_NOTE
  PICS_AND_DESCRIPTIVE
  PICS_AND_DESCRIPTIVE_NOTE
}

enum BeforeLaunchBrandsFilterableColumns {
  PRICE
}

enum MamadCogsSortableColumns {
  SKU
  COGS
}

enum MamadCogsFilterableColumns {
  COGS
}

enum MamadRatingSortableColumns {
  SKU
  RATE
  GLOBAL_RATING
}

enum MamadRatingFilterableColumns {
  RATE
  GLOBAL_RATING
}

enum SortBy {
  ASC
  DESC
}
